#include "servo.h"

Servo::Servo(pinStruct_t& servoPin)
{
	/* Set pin B8 to use it as TIM4 CH3 peripheral */
	GPIO_InitTypeDef GPIO_InitStruct = {0};

	GPIO_InitStruct.Pin = servoPin;
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

	/* Configure TIM4 to generate 2ms period signal */
	TIM_HandleTypeDef htim4;

	htim4.Instance = TIM4;
	htim4.Init.Prescaler = 10 - 1;	//CK_CNT = 1.6MHz
	htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
	htim4.Init.Period = 32000 - 1;	//Reload counter every 2ms
	htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
	HAL_TIM_PWM_Init(&htim4);

	/* Generate PWM signal */
	TIM_OC_InitTypeDef pwmConfigOC = {0};
	pwmConfigOC.OCMode = TIM_OCMODE_PWM1;
	pwmConfigOC.Pulse = 2399;		//7.5% Duty cycle (1.5ms)
	pwmConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
	pwmConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
	HAL_TIM_OC_ConfigChannel(&htim4, &pwmConfigOC, TIM_CHANNEL_3);
}
